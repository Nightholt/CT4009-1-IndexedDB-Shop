do git commands list for nat 

git works likes this:

Remote "cloud" Repo on github
you "git clone" a repo to your local hdd
you can create a new branch - the root branch is called master, youcould create a new branch for "CourseWork", it's good practice
to create a branch do "git branch newbranchname" - this will create a branch from whatever branch you are currently on
you can change to a different branch "$ git checkout branchname" - in case you have a lot of branches
you do work on the files: create/update/add/delete etc
you can "git add *" for adding any new files, or "git add myfilename.txt" for just one file
you then "git commit" the changes you have made by 'staging' them
you then "git push" the changes back up to the github repo.
you can "git pull" changes from the github repo where they are automatically merged into your local copy - in case someone else has worked on your code - you "pull" those changes down to you version where they are merged for you.
you can "git fetch" changes from the github repo where they are not merged - you have to merge them yourself

best place to learn: https://try.github.io
this is brilliant: https://github.github.com/training-kit/downloads/github-git-cheat-sheet/
and for visual code: https://duckduckgo.com/?q=visual+code+git+tutorial&t=opera&ia=videos

Commands:
set up git:
git config --global user.email ohbitbrain@gmail.com
git config --global user.name gototheant
git config --global color.ui auto

cd d: (change path folder)
cd /Repos/CourseWork2019
pwd (show you what folder you are currently in)
ls -al - list all the files 

get a specific branch from github to your local hdd
git clone https://github.com/Nootalie-Nooter/CT4009-2019-20-001-s1906563-13-Jan-2020.git

git add * (adds all the files from the folder you are in that are not already in the repo)
git commit -m "some useful message here that will help me remember what this commit was about"
git push

get files from the server to your local repo
git pull
git fetch

list all the branches:
git branch -a
git checkout branchname

Visual Code does all of the above for you inthe left hand pane.
that's it to keep it simple.
once you use this you will love it.